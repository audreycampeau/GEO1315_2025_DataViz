---
title: "Visualisation des donn√©es physiques"
subtitle: "Terrain 1 en g√©ographie (cohorte 2024)"
author: "Fran√ßois Kabambi & Audrey Campeau"
editor: visual
email: audrey.campeau@umontr√©al.ca
affiliation: "Department of Geography, Universit√© de Montr√©al"
lang: fr    

format:
  html:
    code-fold: false
    code-summary: "üëà Voir le code ici"
    toc: true
    toc-location: left
    theme: default
    toc-title: "Table of Content "
    number-sections: true
    embed-resources: true

fig-cap-location: margin
date: today
description: "Ce document comporte une courte analyse de donn√©es sur la chimie et la biologie des lacs des Laurentides. Ces donn√©es ont √©t√© r√©colt√©es par vous ü´µ"
title-block-banner: "#f0f3f5"
title-block-banner-color: "black"
css: style.css
---

# 1. Comment parcourir le document

L'objectif de ce document est de vous offrir une vue d'ensemble des donn√©es physiques collect√©es par chacun d'entre vous lors du cours Terrain

La table de mati√®re situ√©e dans le coin haut droit, vous permet de circuler √† travers les sections

![Photo du groupe A (gauche) et B (droite)](GroupPhotos.png)

# 2. Tableau \| Base de donn√©es commune

Ce tableau contient les donn√©es recueuillies par 7 √©quipes du groupe A et 6 du groupe B. Ensemble, nous avons √©chantillonn√© 11 lacs, pour un total de 109 observations.

Parmi ces lacs, nous avons 4 lacs prot√©g√©s dans le secteur de la SBL (Lac Triton, Croche, Cromwellet Geai) et 7 autres lacs anthropis√©s, hors SBL.

Plusieurs variables li√©s √† la chimie de l'eau, la communaut√© de zooplancton et les √©missions de CO2 vers l'atmosph√®re, ont √©t√© mesur√©.

```{r, message=FALSE, warning=FALSE}
#Importer les libraries necessaires
library(tidyverse) # librairie de visualisation de donn√©es
library(plotly) # permet de rendre les diagrammes interactifs
library(readxl) # permet d'ouvrir des fichier excel
library(DT) # produit des tableau interactifs


# Charger les donn√©es
#df <- read_xlsx("Base de donn√©es commune.xlsx")
data <- read_xlsx("Base de donn√©es commune.xlsx")

# Afficher le tableau interactif avec des lignes plus serr√©es
datatable(
  data,
  options = list(pageLength = 5),
  filter = "top",
  class = "compact stripe hover"  # Ajoute classe CSS pour compacter les lignes
) %>%
  formatStyle(
    columns = colnames(data),
    `font-size` = '12px',   # R√©duit la taille du texte
    `line-height` = '1em'   # R√©duit la hauteur de ligne
  )

```

# 3. Carte **\| O√π nous avons √©chantillonn√©?**

Gr√¢ce √† cette carte, vous pouvez identifier vos sites d'√©chantillonnage et rep√©rer ceux de vos coll√®gues √©galement. Le lac ayant √©t√© le plus souvent √©chantillonn√© cette ann√©e est le Lac Triton üèÜ (18 √©chantillons), suivit du lac Crocheü•à (15 √©chantillons) et le lac Crowmell ü•â (14 √©chantillons). Bravo aux √©quipes A2, A5, B2, B5 pour ce travail collectif!

```{r, message=FALSE, warning=FALSE}

library(leaflet) # Pour produire des cartes interactives
library(htmltools)

lake_counts <- data %>%
  group_by(LAC) %>%
  summarise(n_samples = n())

print(lake_counts)
# Renommer la colonne √âQUIPE si besoin
# names(data)[names(data) == "√âQUIPE"] <- "EQUIPE"

# Forcer les colonnes num√©riques
#data$LATITUDE <- as.numeric(data$LATITUDE)
#data$LONGITUDE <- as.numeric(data$LONGITUDE)

# V√©rification des coordonn√©es valides
#data <- data[!is.na(data$LATITUDE) & !is.na(data$LONGITUDE), ]
#data <- data[data$LATITUDE >= -90 & data$LATITUDE <= 90, ]
#data <- data[data$LONGITUDE >= -180 & data$LONGITUDE <= 0, ]  # On suppose l'Am√©rique

# Si la longitude est positive, on inverse (par s√©curit√©)
#data$LONGITUDE <- ifelse(data$LONGITUDE > 0, -abs(data$LONGITUDE), data$LONGITUDE)

# G√©n√©rer des couleurs (ajuster si n > 66)
couleurs <- ifelse(data$GROUPE=="A", "purple","orange")

# Afficher la carte
leaflet(data) %>%
  addTiles() %>%
  addCircleMarkers(
    lng = ~LONGITUDE,
    lat = ~LATITUDE,
    radius = 5,
    color = couleurs,
    label = ~htmlEscape(EQUIPE),
    stroke = FALSE,
    fillOpacity = 1
  ) %>%
  addLegend(
    "bottomright",
    colors = c("purple", "orange"),
    labels = c("A", "B"),
    title = "Groupes"
  )

```

# 4. Diagramme de sucette **\| Conductivit√© de l‚Äôeau**

La conductivit√© de l'eau est une mesure de la capacit√© de l'eau √† conduire un courant √©lecrtique. Elle est d√ª √† la pr√©sence des ions dissous tels que les chlorures, les nitrates et les sulfates. Leurs apports lors de l'√©pandage du sel fait sur les routes en hiver, est √† la base de l'augmentation de la conductivit√© dans les zones hors de la SBL.

```{r, message=FALSE, warning=FALSE}
library(readxl)
library(ggplot2)
library(dplyr)
library(plotly)

# Charger les donn√©es
df <- read_excel("Base de donn√©es commune.xlsx")

# Filtrer les donn√©es n√©cessaires
df_clean <- df %>%
  select(√âQUIPE, SECTEUR, Conductivit√©) %>%
  filter(!is.na(Conductivit√©))

# Moyenne de la conductivit√© par √âQUIPE et SECTEUR
df_summary <- df_clean %>%
  group_by(√âQUIPE, SECTEUR) %>%
  summarise(Conductivit√© = mean(Conductivit√©, na.rm = TRUE)) %>%
  ungroup()

# Cr√©er le graphique ggplot
p <- ggplot(df_summary, aes(
  x = Conductivit√©,
  y = reorder(√âQUIPE, Conductivit√©),
  color = SECTEUR,
  text = paste0(
    "√âQUIPE : ", √âQUIPE, "<br>",
    "SECTEUR : ", SECTEUR, "<br>",
    "Conductivit√© : ", round(Conductivit√©, 2), " ¬µS/cm"
  )
)) +
  geom_segment(aes(x = 0, xend = Conductivit√©, yend = √âQUIPE), size = 1.2, color = "gray") +
  geom_point(size = 4) +
  scale_color_manual(c("orange", "purple"))+
  labs(
    title = "Conductivit√© moyenne par √âQUIPE et SECTEUR",
    x = "Conductivit√© (¬µS/cm)",
    y = "√âQUIPE"
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10),
    axis.title = element_text(size = 12, face = "bold")
  )

# Rendre le graphique interactif
ggplotly(p, tooltip = "text")

```

## 4.1. Nuage des points **\|** Relation entre surface du lac et ratio de drainage

La majorit√© des points sont regroup√©s dans la zone o√π l'aire du lac est inf√©rieure √† 1ha. Ce qui d√©montre que plus l‚Äôaire du lac est petite, plus le ratio de drainage est √©lev√©

```{r, message=FALSE, warning=FALSE}

library(readxl)
library(dplyr)
library(ggplot2)
library(janitor)
library(plotly)  # Pour l‚Äôinteractivit√©

# Charger et nettoyer la base
df <- read_excel("Base de donn√©es commune.xlsx") %>%
  clean_names()

# Nettoyage des colonnes num√©riques
df_clean <- df %>%
  mutate(
    aire_du_lac = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", aire_du_lac))),
    ratio_drainage = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", ratio_drainage)))
  ) %>%
  filter(!is.na(aire_du_lac), !is.na(ratio_drainage), !is.na(secteur))

# Cr√©er le graphique ggplot
p <- ggplot(df_clean, aes(
  x = aire_du_lac,
  y = ratio_drainage,
  color = secteur,
  text = paste0(
    "Lac : ", lac, "<br>",
    "Secteur : ", secteur, "<br>",
    "Aire du lac : ", round(aire_du_lac, 2), " km¬≤<br>",
    "Ratio de drainage : ", round(ratio_drainage, 2)
  )
)) +
  geom_point(size = 3, alpha = 0.8) +
  labs(
    title = "Relation entre l‚ÄôAire du lac et le Ratio de drainage selon le secteur",
    x = "Aire du lac (km¬≤)",
    y = "Ratio de drainage",
    color = "Secteur"
  ) +
  scale_color_manual(values = c("HSBL" = "red", "SBL" = "blue")) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    axis.title = element_text(size = 12),
    legend.title = element_text(face = "bold")
  )

# Convertir en graphique interactif
ggplotly(p, tooltip = "text")

```

# 5. **Statut trophique**

## 5.1. Treemap / Concentration des nutriments

Successivement, les lacs Pin rouge, Echo et Connely ont une teneur √©lev√©e en phosphore total. La m√™me tendance ainsi que le m√™me ordre sontt √©galement observ√©s pour les autres nutriments (carbone organique et chlorophylle_a).

```{r, message=FALSE, warning=FALSE}

library(readxl)
library(dplyr)
library(janitor)
library(plotly)

# Charger et nettoyer la base
df <- read_excel("Base de donn√©es commune.xlsx") %>%
  clean_names()

# Nettoyage des colonnes (virgules, symboles, texte parasite) + conversion
df_clean <- df %>%
  mutate(
    phosphore_total = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", phosphore_total))),
    chlorophylle_a = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", chlorophylle_a))),
    carbone_organique_dissous = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", carbone_organique_dissous)))
  ) %>%
  filter(!is.na(lac))

# R√©sumer : Moyenne par lac (pour avoir une seule barre par lac)
df_summary <- df_clean %>%
  group_by(lac) %>%
  summarise(
    phosphore_total = mean(phosphore_total, na.rm = TRUE),
    chlorophylle_a = mean(chlorophylle_a, na.rm = TRUE),
    carbone_organique_dissous = mean(carbone_organique_dissous, na.rm = TRUE)
  ) %>%
  ungroup()

# Phosphore total
plot_phosphore <- plot_ly(
  df_summary,
  x = ~lac,
  y = ~phosphore_total,
  type = "bar",
  name = "Phosphore total",
  text = ~round(phosphore_total, 2),
  textposition = "outside",
  marker = list(color = "steelblue")
) %>%
  layout(
    title = "Phosphore total par lac",
    xaxis = list(title = "Lac"),
    yaxis = list(title = "Phosphore total (¬µg/L)"),
    showlegend = FALSE
  )

# Chlorophylle a
plot_chlorophylle <- plot_ly(
  df_summary,
  x = ~lac,
  y = ~chlorophylle_a,
  type = "bar",
  name = "Chlorophylle a",
  text = ~round(chlorophylle_a, 2),
  textposition = "outside",
  marker = list(color = "forestgreen")
) %>%
  layout(
    title = "Chlorophylle a par lac",
    xaxis = list(title = "Lac"),
    yaxis = list(title = "Chlorophylle a (¬µg/L)"),
    showlegend = FALSE
  )

# Carbone organique dissous
plot_carbone <- plot_ly(
  df_summary,
  x = ~lac,
  y = ~carbone_organique_dissous,
  type = "bar",
  name = "Carbone organique dissous",
  text = ~round(carbone_organique_dissous, 2),
  textposition = "outside",
  marker = list(color = "orange")
) %>%
  layout(
    title = "Carbone organique dissous par lac",
    xaxis = list(title = "Lac"),
    yaxis = list(title = "Carbone organique dissous (mg/L)"),
    showlegend = FALSE
  )

# Affichage
plot_phosphore
plot_chlorophylle
plot_carbone
```

## 5.2. Classement des lacs selon leur richesse en nutriments

Pour ce qui est de la quantit√© totale en nutriments, le lac le plus enrichi est le Pin rouge avec un total de 26.02 mg/l.

```{r, message=FALSE, warning=FALSE}
library(readxl)
library(dplyr)
library(janitor)
library(ggplot2)
library(plotly)

# Charger et nettoyer la base
df <- read_excel("Base de donn√©es commune.xlsx") %>%
  clean_names()

# Nettoyer et convertir les valeurs en num√©riques (si texte ou NA)
df_clean <- df %>%
  filter(!is.na(lac), lac != "") %>%
  mutate(
    phosphore_total = suppressWarnings(as.numeric(phosphore_total)),
    chlorophylle_a = suppressWarnings(as.numeric(chlorophylle_a)),
    carbone_organique_dissous = suppressWarnings(as.numeric(carbone_organique_dissous))
  ) %>%
  filter(!is.na(phosphore_total) | !is.na(chlorophylle_a) | !is.na(carbone_organique_dissous))

# Calculer les moyennes par lac
df_summary <- df_clean %>%
  group_by(lac) %>%
  summarise(
    moy_phosphore = mean(phosphore_total, na.rm = TRUE),
    moy_chlorophylle = mean(chlorophylle_a, na.rm = TRUE),
    moy_carbone = mean(carbone_organique_dissous, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(
    total_nutriments = rowSums(across(starts_with("moy_")), na.rm = TRUE)
  ) %>%
  arrange(desc(total_nutriments))

# Cr√©er le graphique ggplot
p <- ggplot(df_summary, aes(x = reorder(lac, total_nutriments), y = total_nutriments,
                            text = paste("Lac :", lac,
                                         "<br>Phosphore :", round(moy_phosphore, 2),
                                         "<br>Chlorophylle :", round(moy_chlorophylle, 2),
                                         "<br>Carbone org. dissous :", round(moy_carbone, 2),
                                         "<br>Total nutriments :", round(total_nutriments, 2)))) +
  geom_col(fill = "#2b8cbe") +
  coord_flip() +
  labs(
    title = "Classement des lacs selon leur richesse en nutriments",
    x = "Lacs",
    y = "Moyenne des concentrations (¬µg/L ou mg/L)"
  ) +
  theme_minimal()

# Rendre le graphique interactif
ggplotly(p, tooltip = "text")

```

# 6. Carte **\| Zoo plancton**

La carte suivante, nous permet d‚Äôidentifier les esp√®ces de zooplanctons et les lacs o√π ils peuvent se retrouver. En terme num√©rique, la Bosmina ressort comme l‚Äôesp√®ce la plus abondante alors que la Polyphemus la moins repr√©sent√©e.

```{r, message=FALSE, warning=FALSE}
library(readxl)
library(dplyr)
library(janitor)
library(DT)

# Lire et nettoyer la base
df <- read_excel("Base de donn√©es commune.xlsx") %>%
  clean_names()

# Liste des esp√®ces zooplanctoniques
zooplanctons <- c(
  "calanoide", "cyclopoide", "bosmina", "daphnia", "holopedium",
  "diaphanosoma", "chydorus", "leptodora", "polyphemus", "chaoborus",
  "hydracarina", "chironomidae", "ostracoda"
)

# Palette de couleurs (emoji ou fond HTML)
species_colors <- c(
  calanoide = "#FFD700",      # or / jaune
  cyclopoide = "#FF6347",     # rouge clair
  bosmina = "#1E90FF",        # bleu
  daphnia = "#32CD32",        # vert
  holopedium = "#DA70D6",
  diaphanosoma = "#FFA500",
  chydorus = "#87CEEB",
  leptodora = "#800080",
  polyphemus = "#A0522D",
  chaoborus = "#008B8B",
  hydracarina = "#006400",
  chironomidae = "#FF1493",
  ostracoda = "#6A5ACD"
)

# Cr√©er un tableau binaire (pr√©sence/absence) pour chaque lac et esp√®ce
df_pres <- df %>%
  select(lac, all_of(zooplanctons)) %>%
  group_by(lac) %>%
  summarise(across(everything(), ~ any(!is.na(.) & . > 0))) %>%
  ungroup()

# Remplacer TRUE par case color√©e, FALSE par vide
df_color <- df_pres

for (z in zooplanctons) {
  df_color[[z]] <- ifelse(
    df_color[[z]],
    paste0("<div style='width:20px;height:20px;background-color:", species_colors[[z]], ";border-radius:3px;margin:auto'></div>"),
    ""
  )
}

# Renommer les colonnes avec noms lisibles
names(df_color) <- c("Lac", tools::toTitleCase(zooplanctons))

# Cr√©er le tableau interactif
datatable(
  df_color,
  escape = FALSE,  # autoriser HTML dans les cellules
  rownames = FALSE,
  options = list(pageLength = 10, autoWidth = TRUE)
)

```

# 7. Heatmap **\| Flux et √©mission de CO2**

## 7.1. Variabilit√© au sein des lacs

Les zones √† forte √©mission se concentrent dans le secteur HSBL alors que dans le SBL, les zones sont globalement peu √©mettrices. Ce pourrait √™tre d√ª √† une combinaison de facteurs biologiques, physiques et anthropiques. Les principales zones du secteur HSBL √† √©missions marqu√©es sont¬†: le quai de biologie, le Centre du lac (p√©lagique), √† proximit√© de la plage et le quai priv√©.

```{r, message=FALSE, warning=FALSE}
library(readxl)
library(dplyr)
library(janitor)
library(plotly)

# Charger et nettoyer les donn√©es
df <- read_excel("Base de donn√©es commune.xlsx") %>%
  clean_names()

# Nettoyer les valeurs d‚Äô√©missions (caract√®res ‚Üí num√©riques fiables)
df_clean <- df %>%
  mutate(
    emissions = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", emissions_co2_annuel_tg_c_co2_yr))),
    zone = zone_du_lac_echantillonnee
  ) %>%
  filter(!is.na(emissions), !is.na(zone))

# Regrouper les √©missions par zone (total ou moyenne si n√©cessaire)
df_grouped <- df_clean %>%
  group_by(zone) %>%
  summarise(total_emissions = sum(emissions, na.rm = TRUE)) %>%
  ungroup()

# D√©finir les n≈ìuds
nodes <- data.frame(name = c("√âmissions CO‚ÇÇ", unique(df_grouped$zone)))

# Cr√©er les liens (flux) entre source et cibles
links <- data.frame(
  source = 0,  # "√âmissions CO‚ÇÇ" ‚Üí index 0
  target = match(df_grouped$zone, nodes$name) - 1,  # correspondance des index
  value = round(df_grouped$total_emissions, 2)
)

# Cr√©er le diagramme Sankey
plot_ly(
  type = "sankey",
  orientation = "h",
  node = list(
    label = nodes$name,
    pad = 15,
    thickness = 20,
    color = "lightblue"
  ),
  link = list(
    source = links$source,
    target = links$target,
    value = links$value,
    label = paste("CO‚ÇÇ :", links$value, "Tg/an")
  )
) %>%
  layout(
    title = "Sankey Diagram: R√©partition des √©missions de CO‚ÇÇ par zone √©chantillonn√©e",
    font = list(size = 12)
  )

```

## 7.2. Dot plot / Emissions Annuelles CO2 par lac

Le lac Achigan est celui qui a √©mis plus de CO2 avec un total de 1208.5 Tg CO2/ an suivi du lac Connely avec 344 Tg CO2/an.

```{r, message=FALSE, warning=FALSE}
library(readxl)
library(dplyr)
library(plotly)

# Lecture des donn√©es
data <- read_excel("Base de donn√©es commune.xlsx", sheet = "GEO1315_2025")

# Nettoyage de la colonne CO2
data_clean <- data %>%
  rename(
    CO2_raw = `Emissions CO‚ÇÇ Annuel (Tg C-CO‚ÇÇ/yr)`
  ) %>%
  mutate(
    CO2 = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", CO2_raw)))
  ) %>%
  filter(!is.na(CO2), !is.na(LAC)) %>%
  group_by(LAC) %>%
  summarise(Emission_CO2 = mean(CO2, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(Emission_CO2))

# Cr√©ation du dot plot interactif
plot_ly(
  data_clean,
  x = ~Emission_CO2,
  y = ~reorder(LAC, Emission_CO2),
  type = 'scatter',
  mode = 'markers',
  marker = list(size = 10, color = 'darkgreen'),
  text = ~paste("Lac:", LAC, "<br>CO‚ÇÇ:", round(Emission_CO2, 3), "Tg C-CO‚ÇÇ/yr"),
  hoverinfo = "text"
) %>%
  layout(
    title = "Dot Plot : √âmissions annuelles de CO‚ÇÇ par lac",
    xaxis = list(title = "√âmissions CO‚ÇÇ (Tg C-CO‚ÇÇ/yr)"),
    yaxis = list(title = "Lacs", tickfont = list(size = 10)),
    margin = list(l = 120)
  )

```

# 8. Nuage de points **\| Hydrographie**

## 8.1. Relation entre Temps renouv. et ratio drainage

La majorit√© des points sont concentr√©s √† gauche (temps de renouvellement \< 1 an), avec un ratio de drainage variant fortement. La tendance est que la majorit√© des lacs se renouvellent rapidement mais ont un temps de drainage tr√®s variable. Le cas sp√©cifique du lac Cromwell avec un temps de renouvellement de 0.06 an soit 22 jours (tr√®s rapide) et un ratio de 94.08.

```{r, message=FALSE, warning=FALSE}
library(readxl)
library(dplyr)
library(plotly)

# Chargement des donn√©es
data <- read_excel("Base de donn√©es commune.xlsx", sheet = "GEO1315_2025")

# Nettoyage et conversion des colonnes
data_clean <- data %>%
  mutate(
    `Temps Renouvellement (ann√©e)` = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", `Temps Renouvellement (ann√©e)`))),
    `Ratio Drainage` = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", `Ratio Drainage`)))
  ) %>%
  filter(!is.na(`Temps Renouvellement (ann√©e)`), !is.na(`Ratio Drainage`), !is.na(SECTEUR)) %>%
  filter(SECTEUR %in% c("SBL", "HSBL"))

# D√©finir les couleurs par secteur
data_clean <- data_clean %>%
  mutate(Couleur = ifelse(SECTEUR == "HSBL", "red", "blue"))

# Cr√©ation du scatterplot interactif
plot_ly(
  data = data_clean,
  x = ~`Temps Renouvellement (ann√©e)`,
  y = ~`Ratio Drainage`,
  type = 'scatter',
  mode = 'markers',
  color = ~SECTEUR,
  colors = c("SBL" = "blue", "HSBL" = "red"),
  text = ~paste("Lac:", LAC,
                "<br>Temps Renouvellement (ann√©e):", `Temps Renouvellement (ann√©e)`,
                "<br>Ratio Drainage:", `Ratio Drainage`,
                "<br>Secteur:", SECTEUR),
  marker = list(size = 10),
  hoverinfo = "text"
) %>%
  layout(
    title = "Relation entre Temps de Renouvellement et Ratio de Drainage",
    xaxis = list(title = "Temps de Renouvellement (ann√©es)"),
    yaxis = list(title = "Ratio de Drainage"),
    legend = list(title = list(text = "Secteur"))
  )

```

## 8.2. Corr√©lation entre aire, volume et profondeur moyen

Une corr√©lation positive entre l‚Äôaire et le volume des lacs ressort clairement; faisant que plus un lac est large, plus son volume tend √† √™tre grand. Cependant, cette relation est modul√©e par la profondeur moyenne. Il n‚Äôen reste pas que la profondeur est un facteur cl√© qui peut d√©terminer le volume, et pas seulement l‚Äôaire.

```{r, message=FALSE, warning=FALSE}
library(readxl)
library(dplyr)
library(plotly)

# Lecture du fichier Excel
data <- read_excel("Base de donn√©es commune.xlsx", sheet = "GEO1315_2025")

# Nettoyage des colonnes num√©riques
data_clean <- data %>%
  mutate(
    Aire = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", `Aire du lac`))),
    Volume = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", `Volume du lac`))),
    Profondeur_Moy = as.numeric(gsub(",", ".", gsub("[^0-9,\\.]", "", `Profondeur Moy.`)))
  ) %>%
  filter(!is.na(Aire), !is.na(Volume), !is.na(Profondeur_Moy))

# Cr√©ation du scatterplot 3D interactif
plot_ly(
  data_clean,
  x = ~Aire,
  y = ~Volume,
  z = ~Profondeur_Moy,
  type = "scatter3d",
  mode = "markers",
  marker = list(size = 4, color = ~Profondeur_Moy, colorscale = "Blues", showscale = TRUE),
  text = ~paste("Lac:", LAC,
                "<br>Aire:", round(Aire, 2), "km¬≤",
                "<br>Volume:", round(Volume, 2), "km¬≥",
                "<br>Profondeur Moyenne:", round(Profondeur_Moy, 1), "m"),
  hoverinfo = "text"
) %>%
  layout(
    title = "Scatterplot 3D : Aire, Volume et Profondeur Moyenne des lacs",
    scene = list(
      xaxis = list(title = "Aire du lac (km¬≤)"),
      yaxis = list(title = "Volume du lac (km¬≥)"),
      zaxis = list(title = "Profondeur Moyenne (m)")
    )
  )
```

## 
